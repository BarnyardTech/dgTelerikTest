@page "/"
@using Telerik.Blazor.Components.Grid

<h1>Hello, world!</h1>

@foreach (dgDoc doc in docs)
{
    <p>@doc.name</p>
}

<TelerikGrid Data="@docs" Height="580" Pageable="true" PageSize="10">
    <TelerikGridColumns>
        <TelerikGridColumn Title="Name" Field=@nameof(dgDoc.name)>
            <Template>
                @{
                    var item = context as dgDoc;
                    <p>@item.name</p>
                }
            </Template>
        </TelerikGridColumn>
        <TelerikGridColumn Title="Description" Field=@nameof(dgDoc.description) />
    </TelerikGridColumns>
</TelerikGrid>

@*<Telerik.Blazor.Components.Grid.TelerikGrid Data="@docs" Height="580" Pageable="true" PageSize="10">
    <TelerikGridColumns>
        <Telerik.Blazor.Components.Grid.TelerikGridColumn Title="Name" Field=@nameof(dgDoc.name)>
            <Template>
                @{
                    var item = context as dgDoc;
                    <p>@item.name</p>
                }
            </Template>
        </Telerik.Blazor.Components.Grid.TelerikGridColumn>
        <Telerik.Blazor.Components.Grid.TelerikGridColumn Title="Description" Field=@nameof(dgDoc.description) />
    </TelerikGridColumns>
</Telerik.Blazor.Components.Grid.TelerikGrid>*@

@functions {

    List<dgDoc> docs;
    dgDoc doc;

    protected async override Task OnInitAsync()
    {
        await LoadDocs();
    }

    protected async Task LoadDocs()
    {
        docs = new List<dgDoc>();
        for (int i = 1; i <= 10; i++)
        {
            doc = new dgDoc();
            doc.name = $"Name{i}";
            doc.description = $"Descript for Name{i}";
            docs.Add(doc);
        }
        StateHasChanged();
    }

    public class dgDoc
    {
        public string name { set; get; }
        public string description { set; get; }
    }
}

